syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.studentDemo.campusStore";
option java_outer_classname = "campusStoreProto";


//商店也是一个用户，用户id为1，所以所有与商店的交易，对手方都为id为1的用户
service CampusStoreService {
    rpc getProductById (getProductRequest) returns (getProductResponse);
    rpc setProduct(setProductRequest) returns (setProductResponse);
    rpc getProducts(getProductsRequest) returns (getProductsResponse);
    rpc makeComment(makeCommentRequest) returns (makeCommentResponse);
    rpc buyProducts(buyProductsRequest) returns (buyProductsResponse);
    rpc refundProduct(refundProductRequest) returns (refundProductResponse);
}

message getProductRequest {
    int64 id = 1;
}
message getProductResponse {
    ProductMessage product = 1;
    bool success = 2;
}
message setProductRequest {
    ProductMessage product = 1;
}
message setProductResponse {
    int64 id = 1;
    bool success = 2;
}
message ProductMessage {
    int64 id = 1;// 这个字段在新建商品时应当为空，即不填写；在修改原有商品时应当填写为想修改的id
    string name = 2;
    double price = 3;
    string imageUrl = 4;//这个为图片对应的连接，可以在网上找一些图床把图片上传上去，然后把图片的链接填写在这里，或者直接找例如淘宝的商品的图片链接
    string description = 5;
    string category = 6;
    repeated CommentMessage comments = 7;
}

message CommentMessage {
    int64 id = 1;
    string content = 2;
    int64 userId = 3;
}

message getProductsRequest {
    string category = 1;//如果填写为“all”，则返回所有商品
    int32 page = 2;//查询页数，从1开始，每页10个商品
}

message getProductsResponse {
    repeated ProductMessage products = 1;
}

message makeCommentRequest {
    int64 productId = 1;
    string content = 2;
    int64 userId = 3;
}

message makeCommentResponse {
    bool success = 1;
}

message buyProductsRequest {
    repeated int64 productId = 1;
    int64 userId = 2;
    string password = 3;
}

message buyProductsResponse {
    bool success = 1;
}

message refundProductRequest {
    int64 transactionId = 1;
    int64 userId = 2;
}

message refundProductResponse {
    bool success = 1;
}